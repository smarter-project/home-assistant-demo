apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-config
  name: {{ .Values.application.appName }}-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-mosquitto
  name: {{ .Values.application.appName }}-mosquitto
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-homeassistant
  name: {{ .Values.application.appName }}-homeassistant
spec:
  type: NodePort
  ports:
    - name: "8123"
      port: 8123
      targetPort: 8123
      nodePort: {{ .Values.configuration.homeassistant.nodePort }}
  selector:
    application.service: {{ .Values.application.appName }}-homeassistant
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-mosquitto
  name: {{ .Values.application.appName }}-mosquitto
spec:
  type: NodePort
  ports:
    - name: "1883"
      port: 1883
      targetPort: 1883
      nodePort: {{ .Values.configuration.mosquitto.nodePort }}
  selector:
    application.service: {{ .Values.application.appName }}-mosquitto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-data
  name: {{ .Values.application.appName }}-data
spec:
  replicas: 1
  selector:
    matchLabels:
      application.service: {{ .Values.application.appName }}-data
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        application.service: {{ .Values.application.appName }}-data
    spec:
      initContainers:
        - name: init
          image: {{ .Values.configuration.dataContainer.image }}:{{ .Values.configuration.dataContainer.version }}
          imagePullPolicy: Always          
          command: ["sh", "-c", "cp -r /data/config  /shared && cp -r /mosquitto /shared && touch /shared/config/ready.txt && touch /shared/mosquitto/ready.txt"]
          volumeMounts:
             - name: {{ .Values.application.appName }}-config
               mountPath: /shared/config
             - name: {{ .Values.application.appName }}-mosquitto               
               mountPath: /shared/mosquitto
      containers:
        - name: data
          image: {{ .Values.configuration.dataContainer.image }}:{{ .Values.configuration.dataContainer.version }}
          volumeMounts:
             - name: config
               mountPath: /shared/config
             - name: mosquitto
               mountPath: /shared/mosquitto

      volumes:
          - name: config
            persistentVolumeClaim:
             claimName: {{ .Values.application.appName }}-config
          - name: mosquitto
            persistentVolumeClaim:
              claimName: {{ .Values.application.appName }}-mosquitto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-mosquitto
  name: {{ .Values.application.appName }}-mosquitto
spec:
  replicas: 1
  selector:
    matchLabels:
      application.service: {{ .Values.application.appName }}-mosquitto
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.36.0 (HEAD)
      labels:
        application.service: {{ .Values.application.appName }}-mosquitto
    spec:
      initContainers:
        - name: init
          image: {{ .Values.configuration.mosquitto.container.init.image }}:{{ .Values.configuration.mosquitto.container.init.version }}
          command: ["sh", "-c", "while [ ! -f /mosquitto/ready.txt ]; do sleep 1; done; echo ok"]
          volumeMounts:
             - name: {{ .Values.application.appName }}-mosquitto               
               mountPath: /mosquitto
      containers:
        - image: {{ .Values.configuration.mosquitto.container.main.image }}:{{ .Values.configuration.mosquitto.container.main.version }}
          name: mosquitto
          ports:
            - containerPort: 1883
              protocol: TCP
          volumeMounts:
            - mountPath: /mosquitto
              name: mosquitto
      restartPolicy: Always
      volumes:
        - name: mosquitto
          persistentVolumeClaim:
            claimName: {{ .Values.application.appName }}-mosquitto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application.service: {{ .Values.application.appName }}-homeassistant
  name: {{ .Values.application.appName }}-homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      application.service: {{ .Values.application.appName }}-homeassistant
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.36.0 (HEAD)
      labels:
        application.service: {{ .Values.application.appName }}-homeassistant
    spec:
      initContainers:
        - name: init
          image: {{ .Values.configuration.homeassistant.container.init.image }}:{{ .Values.configuration.homeassistant.container.init.version }}
          command: ["sh", "-c", "while [ ! -f /config/ready.txt ]; do sleep 1; done; echo ok"]
          volumeMounts:
             - name: {{ .Values.application.appName }}-config               
               mountPath: /config
    
      containers:
        - image: {{ .Values.configuration.homeassistant.container.main.image }}:{{ .Values.configuration.homeassistant.container.main.version }}
          name: {{ .Values.application.appName }}-homeassistant
          ports:
            - containerPort: 8123
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.application.appName }}-config
